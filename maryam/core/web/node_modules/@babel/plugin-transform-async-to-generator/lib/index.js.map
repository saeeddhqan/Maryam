{"version":3,"names":["declare","api","options","assertVersion","method","module","noNewArrows","assumption","ignoreFunctionLength","name","visitor","Function","path","state","node","async","generator","wrapAsync","methodWrapper","t","cloneNode","addNamed","remapAsyncToGenerator","addHelper"],"sources":["../src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport remapAsyncToGenerator from \"@babel/helper-remap-async-to-generator\";\nimport { addNamed } from \"@babel/helper-module-imports\";\nimport { types as t } from \"@babel/core\";\n\nexport interface Options {\n  method?: string;\n  module?: string;\n}\n\ntype State = {\n  methodWrapper?: t.Identifier | t.SequenceExpression;\n};\n\nexport default declare<State>((api, options: Options) => {\n  api.assertVersion(7);\n\n  const { method, module } = options;\n  // Todo(BABEL 8): Consider default it to false\n  const noNewArrows = api.assumption(\"noNewArrows\") ?? true;\n  const ignoreFunctionLength = api.assumption(\"ignoreFunctionLength\") ?? false;\n\n  if (method && module) {\n    return {\n      name: \"transform-async-to-generator\",\n\n      visitor: {\n        Function(path, state) {\n          if (!path.node.async || path.node.generator) return;\n\n          let wrapAsync = state.methodWrapper;\n          if (wrapAsync) {\n            wrapAsync = t.cloneNode(wrapAsync);\n          } else {\n            wrapAsync = state.methodWrapper = addNamed(path, method, module);\n          }\n\n          remapAsyncToGenerator(\n            path,\n            { wrapAsync },\n            noNewArrows,\n            ignoreFunctionLength,\n          );\n        },\n      },\n    };\n  }\n\n  return {\n    name: \"transform-async-to-generator\",\n\n    visitor: {\n      Function(path, state) {\n        if (!path.node.async || path.node.generator) return;\n\n        remapAsyncToGenerator(\n          path,\n          { wrapAsync: state.addHelper(\"asyncToGenerator\") },\n          noNewArrows,\n          ignoreFunctionLength,\n        );\n      },\n    },\n  };\n});\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAAyC,eAW1B,IAAAA,0BAAO,EAAQ,CAACC,GAAG,EAAEC,OAAgB,KAAK;EAAA;EACvDD,GAAG,CAACE,aAAa,CAAC,CAAC,CAAC;EAEpB,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGH,OAAO;EAElC,MAAMI,WAAW,sBAAGL,GAAG,CAACM,UAAU,CAAC,aAAa,CAAC,8BAAI,IAAI;EACzD,MAAMC,oBAAoB,uBAAGP,GAAG,CAACM,UAAU,CAAC,sBAAsB,CAAC,+BAAI,KAAK;EAE5E,IAAIH,MAAM,IAAIC,MAAM,EAAE;IACpB,OAAO;MACLI,IAAI,EAAE,8BAA8B;MAEpCC,OAAO,EAAE;QACPC,QAAQ,CAACC,IAAI,EAAEC,KAAK,EAAE;UACpB,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,IAAIH,IAAI,CAACE,IAAI,CAACE,SAAS,EAAE;UAE7C,IAAIC,SAAS,GAAGJ,KAAK,CAACK,aAAa;UACnC,IAAID,SAAS,EAAE;YACbA,SAAS,GAAGE,WAAC,CAACC,SAAS,CAACH,SAAS,CAAC;UACpC,CAAC,MAAM;YACLA,SAAS,GAAGJ,KAAK,CAACK,aAAa,GAAG,IAAAG,6BAAQ,EAACT,IAAI,EAAER,MAAM,EAAEC,MAAM,CAAC;UAClE;UAEA,IAAAiB,oCAAqB,EACnBV,IAAI,EACJ;YAAEK;UAAU,CAAC,EACbX,WAAW,EACXE,oBAAoB,CACrB;QACH;MACF;IACF,CAAC;EACH;EAEA,OAAO;IACLC,IAAI,EAAE,8BAA8B;IAEpCC,OAAO,EAAE;MACPC,QAAQ,CAACC,IAAI,EAAEC,KAAK,EAAE;QACpB,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,IAAIH,IAAI,CAACE,IAAI,CAACE,SAAS,EAAE;QAE7C,IAAAM,oCAAqB,EACnBV,IAAI,EACJ;UAAEK,SAAS,EAAEJ,KAAK,CAACU,SAAS,CAAC,kBAAkB;QAAE,CAAC,EAClDjB,WAAW,EACXE,oBAAoB,CACrB;MACH;IACF;EACF,CAAC;AACH,CAAC,CAAC;AAAA"}