{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","FormGroup","useForkRef","useControlled","RadioGroupContext","useId","jsx","_jsx","RadioGroup","forwardRef","props","ref","actions","children","defaultValue","name","nameProp","onChange","value","valueProp","other","rootRef","useRef","setValueState","controlled","default","useImperativeHandle","focus","input","current","querySelector","handleRef","contextValue","useMemo","event","target","Provider","role","process","env","NODE_ENV","propTypes","node","any","string","func"],"sources":["/home/vasu/Gsoc/website/project/node_modules/@mui/material/RadioGroup/RadioGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,MAAMC,SAAS,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC;AACtF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,UAAU,GAAG,aAAaT,KAAK,CAACU,UAAU,CAAC,SAASD,UAAU,CAACE,KAAK,EAAEC,GAAG,EAAE;EAC/E,MAAM;MACF;MACA;MACAC,OAAO;MACPC,QAAQ;MACRC,YAAY;MACZC,IAAI,EAAEC,QAAQ;MACdC,QAAQ;MACRC,KAAK,EAAEC;IACT,CAAC,GAAGT,KAAK;IACTU,KAAK,GAAGvB,6BAA6B,CAACa,KAAK,EAAEZ,SAAS,CAAC;EACzD,MAAMuB,OAAO,GAAGtB,KAAK,CAACuB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACJ,KAAK,EAAEK,aAAa,CAAC,GAAGpB,aAAa,CAAC;IAC3CqB,UAAU,EAAEL,SAAS;IACrBM,OAAO,EAAEX,YAAY;IACrBC,IAAI,EAAE;EACR,CAAC,CAAC;EACFhB,KAAK,CAAC2B,mBAAmB,CAACd,OAAO,EAAE,OAAO;IACxCe,KAAK,EAAE,MAAM;MACX,IAAIC,KAAK,GAAGP,OAAO,CAACQ,OAAO,CAACC,aAAa,CAAC,8BAA8B,CAAC;MACzE,IAAI,CAACF,KAAK,EAAE;QACVA,KAAK,GAAGP,OAAO,CAACQ,OAAO,CAACC,aAAa,CAAC,sBAAsB,CAAC;MAC/D;MACA,IAAIF,KAAK,EAAE;QACTA,KAAK,CAACD,KAAK,EAAE;MACf;IACF;EACF,CAAC,CAAC,EAAE,EAAE,CAAC;EACP,MAAMI,SAAS,GAAG7B,UAAU,CAACS,GAAG,EAAEU,OAAO,CAAC;EAC1C,MAAMN,IAAI,GAAGV,KAAK,CAACW,QAAQ,CAAC;EAC5B,MAAMgB,YAAY,GAAGjC,KAAK,CAACkC,OAAO,CAAC,OAAO;IACxClB,IAAI;IACJE,QAAQ,CAACiB,KAAK,EAAE;MACdX,aAAa,CAACW,KAAK,CAACC,MAAM,CAACjB,KAAK,CAAC;MACjC,IAAID,QAAQ,EAAE;QACZA,QAAQ,CAACiB,KAAK,EAAEA,KAAK,CAACC,MAAM,CAACjB,KAAK,CAAC;MACrC;IACF,CAAC;IACDA;EACF,CAAC,CAAC,EAAE,CAACH,IAAI,EAAEE,QAAQ,EAAEM,aAAa,EAAEL,KAAK,CAAC,CAAC;EAC3C,OAAO,aAAaX,IAAI,CAACH,iBAAiB,CAACgC,QAAQ,EAAE;IACnDlB,KAAK,EAAEc,YAAY;IACnBnB,QAAQ,EAAE,aAAaN,IAAI,CAACN,SAAS,EAAEL,QAAQ,CAAC;MAC9CyC,IAAI,EAAE,YAAY;MAClB1B,GAAG,EAAEoB;IACP,CAAC,EAAEX,KAAK,EAAE;MACRP,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACFyB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGhC,UAAU,CAACiC,SAAS,CAAC,yBAAyB;EACpF;EACA;EACA;EACA;EACA;AACF;AACA;EACE5B,QAAQ,EAAEb,SAAS,CAAC0C,IAAI;EACxB;AACF;AACA;EACE5B,YAAY,EAAEd,SAAS,CAAC2C,GAAG;EAC3B;AACF;AACA;AACA;EACE5B,IAAI,EAAEf,SAAS,CAAC4C,MAAM;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;EACE3B,QAAQ,EAAEjB,SAAS,CAAC6C,IAAI;EACxB;AACF;AACA;EACE3B,KAAK,EAAElB,SAAS,CAAC2C;AACnB,CAAC,GAAG,KAAK,CAAC;AACV,eAAenC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}