{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n\n/**\n *\n * API:\n *\n * - [useOption API](https://mui.com/base/api/use-option/)\n */\nexport default function useOption(params) {\n  const {\n    value,\n    optionRef: optionRefParam\n  } = params;\n  const selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\n  }\n  const {\n    getOptionProps,\n    getOptionState,\n    listboxRef,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = selectContext;\n  const optionState = getOptionState(value);\n  const {\n    selected,\n    highlighted\n  } = optionState;\n  const rerender = useForcedRerendering();\n  React.useEffect(() => {\n    function updateSelectedState(selectedValues) {\n      if (!selected) {\n        if (Array.isArray(selectedValues)) {\n          if (selectedValues.includes(value)) {\n            rerender();\n          }\n        } else if (selectedValues === value) {\n          rerender();\n        }\n      } else if (Array.isArray(selectedValues)) {\n        if (!selectedValues.includes(value)) {\n          rerender();\n        }\n      } else if (selectedValues !== value) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\n  React.useEffect(() => {\n    function updateHighlightedState(highlightedValue) {\n      if (highlightedValue === value && !highlighted) {\n        rerender();\n      } else if (highlightedValue !== value && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(optionRefParam, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlighted, listboxRef]);\n  return {\n    getRootProps: function () {\n      let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\n        ref: handleRef\n      });\n    },\n    highlighted,\n    index: optionState.index,\n    selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","SelectUnstyledContext","useForcedRerendering","useOption","params","value","optionRef","optionRefParam","selectContext","useContext","Error","getOptionProps","getOptionState","listboxRef","registerHighlightChangeHandler","registerSelectionChangeHandler","optionState","selected","highlighted","rerender","useEffect","updateSelectedState","selectedValues","Array","isArray","includes","updateHighlightedState","highlightedValue","useRef","handleRef","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getRootProps","otherHandlers","ref","index"],"sources":["/home/vasu/Gsoc/website/project/node_modules/@mui/base/OptionUnstyled/useOption.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n\n/**\n *\n * API:\n *\n * - [useOption API](https://mui.com/base/api/use-option/)\n */\nexport default function useOption(params) {\n  const {\n    value,\n    optionRef: optionRefParam\n  } = params;\n  const selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\n  }\n  const {\n    getOptionProps,\n    getOptionState,\n    listboxRef,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = selectContext;\n  const optionState = getOptionState(value);\n  const {\n    selected,\n    highlighted\n  } = optionState;\n  const rerender = useForcedRerendering();\n  React.useEffect(() => {\n    function updateSelectedState(selectedValues) {\n      if (!selected) {\n        if (Array.isArray(selectedValues)) {\n          if (selectedValues.includes(value)) {\n            rerender();\n          }\n        } else if (selectedValues === value) {\n          rerender();\n        }\n      } else if (Array.isArray(selectedValues)) {\n        if (!selectedValues.includes(value)) {\n          rerender();\n        }\n      } else if (selectedValues !== value) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\n  React.useEffect(() => {\n    function updateHighlightedState(highlightedValue) {\n      if (highlightedValue === value && !highlighted) {\n        rerender();\n      } else if (highlightedValue !== value && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(optionRefParam, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlighted, listboxRef]);\n  return {\n    getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\n      ref: handleRef\n    }),\n    highlighted,\n    index: optionState.index,\n    selected\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}