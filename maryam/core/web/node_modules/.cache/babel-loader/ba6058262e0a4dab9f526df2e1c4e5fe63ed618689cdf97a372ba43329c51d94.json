{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _leaveRenders, _enterRenders;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n    changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n    changeState = _ref2.changeState,\n    children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n    changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n    children = _ref4.children,\n    changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n  function SwitchTransition() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n    return _this;\n  }\n  var _proto = SwitchTransition.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n  _proto.render = function render() {\n    var _this$props = this.props,\n      children = _this$props.children,\n      mode = _this$props.mode,\n      _this$state = this.state,\n      status = _this$state.status,\n      current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n      case ENTERED:\n        component = current;\n    }\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n  return SwitchTransition;\n}(React.Component);\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;","map":{"version":3,"names":["_inheritsLoose","_leaveRenders","_enterRenders","React","PropTypes","ENTERED","ENTERING","EXITING","TransitionGroupContext","areChildrenDifferent","oldChildren","newChildren","isValidElement","key","modes","out","in","callHook","element","name","cb","_element$props","props","apply","arguments","leaveRenders","_ref","current","changeState","cloneElement","onExited","_ref2","children","onEntered","enterRenders","_ref3","_ref4","SwitchTransition","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","status","appeared","setState","_proto","prototype","componentDidMount","getDerivedStateFromProps","mode","render","_this$props","_this$state","data","component","createElement","Provider","value","isMounting","Component","propTypes","process","env","NODE_ENV","oneOf","oneOfType","isRequired","defaultProps"],"sources":["/home/vasu/Gsoc/website/project/node_modules/react-transition-group/esm/SwitchTransition.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}