{"ast":null,"code":"import PropTypes from 'prop-types';\nimport createGrid from './createGrid';\n/**\n *\n * Demos:\n *\n * - [Grid (Material UI)](https://mui.com/material-ui/react-grid/)\n *\n * API:\n *\n * - [Grid API](https://mui.com/system/api/grid/)\n */\nconst Grid = createGrid();\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the negative margin and padding are apply only to the top and left sides of the grid.\n   */\n  disableEqualOverflow: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lgOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  mdOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  smOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   */\n  xlOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xs` breakpoint and wider screens if not overridden.\n   */\n  xsOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number])\n} : void 0;\nexport default Grid;","map":{"version":3,"names":["PropTypes","createGrid","Grid","process","env","NODE_ENV","propTypes","children","node","columns","oneOfType","arrayOf","number","object","columnSpacing","string","container","bool","direction","oneOf","disableEqualOverflow","lg","lgOffset","md","mdOffset","rowSpacing","sm","smOffset","spacing","sx","func","wrap","xl","xlOffset","xs","xsOffset"],"sources":["/home/vasu/Gsoc/website/project/node_modules/@mui/system/esm/Unstable_Grid/Grid.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createGrid from './createGrid';\n/**\n *\n * Demos:\n *\n * - [Grid (Material UI)](https://mui.com/material-ui/react-grid/)\n *\n * API:\n *\n * - [Grid API](https://mui.com/system/api/grid/)\n */\nconst Grid = createGrid();\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the negative margin and padding are apply only to the top and left sides of the grid.\n   */\n  disableEqualOverflow: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lgOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  mdOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  smOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   */\n  xlOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the margin-left equals to the number of columns the grid item uses.\n   * If 'auto', the grid item push itself to the right-end of the container.\n   * The value is applied for the `xs` breakpoint and wider screens if not overridden.\n   */\n  xsOffset: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number])\n} : void 0;\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}